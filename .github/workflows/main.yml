name: snowflake-infra

# C  o  ntrols when the action will  r u n . 
on: [workflow_dispatch]

jobs:
  deploy-snowflake-changes-job:
    runs-on: [ self-hosted, azure ]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Python 3.8.x      
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.8.x
      - name: Set up SnowSQL
        run: |
        # Install SnowSQL if not already installed
        if ! command -v snowsql &> /dev/null; then
          curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.0-linux_x86_64.bash
          chmod +x snowsql-1.2.0-linux_x86_64.bash
          ./snowsql-1.2.0-linux_x86_64.bash
        fi
        # Set Snowflake connection parameters
        snowsql -a <YOUR_ACCOUNT_URL> -u <YOUR_USER> -r <YOUR_ROLE> -w <YOUR_WAREHOUSE> -d <YOUR_DATABASE> -s <YOUR_SCHEMA> -P <YOUR_PASSWORD>
      env:
        SNOWSQL_PWD: ${{ secrets.SNOWSQL_PASSWORD }}  # Store Snowflake password as a GitHub secret



      - name: Run schemachange
        env:
          SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
          SF_ROLE: ${{ secrets.SF_ROLE }}
          SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SF_DATABASE: ${{ secrets.SF_DATABASE }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          python --version
          echo "Step 1: Installing schemachange"
          pip install schemachange
          
          echo "Step 2: Running schemachange"
          schemachange -f $GITHUB_WORKSPACE/migrations -a $SF_ACCOUNT -u $SF_USERNAME -r $SF_ROLE -w $SF_WAREHOUSE -d $SF_DATABASE -c $SF_DATABASE.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table
